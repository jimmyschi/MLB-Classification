using System;




public class MainClass {
    public static void Main(string[] args) {
        double[,] X = {{1.0 , 88.2 , 1720.0}, 
        {1.0 , 97.4 , 2161.0}, 
        {1.0 , 86.3 , 2465.0}, 
        {1.0 , 83.9 , 2538.0}, 
        {1.0 , 94.2 , 2255.0}, 
        {1.0 , 89.3 , 1763.0}, 
        {1.0 , 92.9 , 2336.0}, 
        {1.0 , 85.4 , 2029.0}, 
        {1.0 , 97.1 , 2199.0}, 
        {1.0 , 92.6 , 2229.0}, 
        {0.0 , 93.3 , 2291.0}, 
        {1.0 , 83.6 , 2255.0}, 
        {1.0 , 96.3 , 2257.0}, 
        {1.0 , 89.1 , 1537.0}, 
        {1.0 , 80.3 , 2435.0}, 
        {1.0 , 77.9 , 2547.0}, 
        {1.0 , 85.5 , 2344.0}, 
        {1.0 , 78.6 , 2574.0}, 
        {0.0 , 76.6 , 2112.0}, 
        {1.0 , 89.1 , 1537.0}, 
        {0.0 , 96.1 , 2171.0}, 
        {1.0 , 81.9 , 2363.0}, 
        {0.0 , 73.0 , 2455.0}, 
        {0.0 , 93.2 , 2093.0}, 
        {1.0 , 85.0 , 1128.0}, 
        {1.0 , 79.0 , 2469.0}, 
        {1.0 , 81.2 , 2459.0}, 
        {0.0 , 91.4 , 2315.0}, 
        {0.0 , 85.0 , 1514.0}, 
        {1.0 , 87.0 , 1717.0}, 
        {1.0 , 97.9 , 2184.0}, 
        {1.0 , 91.4 , 2265.0}, 
        {1.0 , 81.3 , 2718.0}, 
        {0.0 , 91.9 , 2440.0}, 
        {1.0 , 76.2 , 2554.0}, 
        {1.0 , 82.2 , 2489.0}, 
        {1.0 , 88.6 , 2380.0}, 
        {1.0 , 93.6 , 2308.0}, 
        {1.0 , 80.5 , 2420.0}, 
        {1.0 , 95.2 , 2221.0}, 
        {1.0 , 85.3 , 2221.0}, 
        {1.0 , 88.3 , 2376.0}, 
        {1.0 , 95.2 , 2349.0}, 
        {0.0 , 95.7 , 2144.0}, 
        {0.0 , 92.6 , 2347.0}, 
        {1.0 , 88.5 , 2752.0}, 
        {0.0 , 86.2 , 2289.0}, 
        {1.0 , 87.1 , 1716.0}, 
        {0.0 , 81.7 , 2585.0}, 
        {1.0 , 94.1 , 2300.0}, 
        {1.0 , 84.6 , 1922.0}, 
        {0.0 , 82.0 , 2488.0}, 
        {1.0 , 89.1 , 2460.0}, 
        {1.0 , 94.4 , 2317.0}, 
        {1.0 , 87.9 , 1703.0}, 
        {1.0 , 91.9 , 2151.0}, 
        {1.0 , 82.2 , 1769.0}, 
        {1.0 , 92.2 , 2227.0}, 
        {1.0 , 92.9 , 2336.0}, 
        {1.0 , 93.2 , 2376.0}, 
        {1.0 , 84.7 , 2672.0}, 
        {0.0 , 84.8 , 2160.0}, 
        {1.0 , 93.3 , 2209.0}, 
        {0.0 , 78.6 , 2304.0}, 
        {1.0 , 78.7 , 2829.0}, 
        {1.0 , 94.6 , 2420.0}, 
        {0.0 , 90.1 , 2129.0}, 
        {1.0 , 93.2 , 2376.0}, 
        {0.0 , 82.9 , 2376.0}, 
        {1.0 , 78.9 , 2617.0}, 
        {1.0 , 86.4 , 1490.0}, 
        {1.0 , 93.8 , 2077.0}, 
        {1.0 , 83.9 , 1981.0}, 
        {0.0 , 96.7 , 2287.0}, 
        {1.0 , 94.8 , 2096.0}, 
        {0.0 , 96.9 , 2561.0}, 
        {1.0 , 94.9 , 2374.0}, 
        {0.0 , 96.6 , 2425.0}, 
        {1.0 , 89.9 , 1601.0}, 
        {1.0 , 79.8 , 3253.0}, 
        {0.0 , 94.1 , 2197.0}, 
        {1.0 , 82.5 , 1680.0}, 
        {1.0 , 94.5 , 2278.0}, 
        {1.0 , 92.0 , 2489.0}, 
        {1.0 , 83.3 , 2770.0}, 
        {1.0 , 91.2 , 2243.0}, 
        {1.0 , 95.0 , 2265.0}, 
        {0.0 , 78.8 , 2562.0}, 
        {0.0 , 85.9 , 1636.0}, 
        {1.0 , 91.4 , 2212.0}, 
        {0.0 , 89.7 , 2026.0}, 
        {1.0 , 79.3 , 2183.0}, 
        {1.0 , 85.0 , 1594.0}, 
        {1.0 , 84.0 , 2215.0}, 
        {1.0 , 89.9 , 2265.0}, 
        {1.0 , 90.7 , 2354.0}, 
        {1.0 , 72.7 , 2632.0}, 
        {1.0 , 95.3 , 2351.0}, 
        {1.0 , 88.2 , 1515.0}, 
        {1.0 , 95.5 , 1877.0}};
        int[] y_two_pitch = {0, 1,1,0,0,1,0,0,0,1,1,0,1,1,1,1,1,0,0,1,1,0,0,1,1,0,1,1,0,1,0,1,0,0,0,0,1,0,1,0
        ,1,1,0,1,1,0,0,1,0,0,1,1,1,1,0,1,1,1,1,0,0,0,1,1,1,1,0,0,0,0,1,1,0,1,0,0,0,1,0,1,1,0,1,1,0,0,1,0,0,1,1,1,0,0,0,1,1,0,1,0};
        int[] y_seven_pitch = {0,5,2,6,5,0,3,6,5,3,3,6,3,0,6,1,6,1,1,0,5,6,1,5,4,1,1,3,0,0,5,3,6,3,1,6,2,3,1,3,0,2,3,5,3,6,6,4,
        6,3,0,6,6,5,0,3,0,3,3,5,6,2,3,1,1,3,5,5,6,6,0,5,0,3,5,3,3,3,0,1,3,0,3,2,2,3,3,1,0,5,5,1,0,1,6,3,1,3,0,5};
        int[] y_pred = new int[100];
        Classification classifier = new Classification();
        y_pred[0] = classifier.predict_seven_pitch(X[0,0],X[0,1],X[0,2]);
        y_pred[1] = classifier.predict_seven_pitch(X[1,0],X[1,1],X[1,2]);
        y_pred[2] = classifier.predict_seven_pitch(X[2,0],X[2,1],X[2,2]);
        y_pred[3] = classifier.predict_seven_pitch(X[3,0],X[3,1],X[3,2]);
        y_pred[4] = classifier.predict_seven_pitch(X[4,0],X[4,1],X[4,2]);
        y_pred[5] = classifier.predict_seven_pitch(X[5,0],X[5,1],X[5,2]);
        y_pred[6] = classifier.predict_seven_pitch(X[6,0],X[6,1],X[6,2]);
        y_pred[7] = classifier.predict_seven_pitch(X[7,0],X[7,1],X[7,2]);
        y_pred[8] = classifier.predict_seven_pitch(X[8,0],X[8,1],X[8,2]);
        y_pred[9] = classifier.predict_seven_pitch(X[9,0],X[9,1],X[9,2]);

        y_pred[10] = classifier.predict_seven_pitch(X[10,0],X[10,1],X[10,2]);
        y_pred[11] = classifier.predict_seven_pitch(X[11,0],X[11,1],X[11,2]);
        y_pred[12] = classifier.predict_seven_pitch(X[12,0],X[12,1],X[12,2]);
        y_pred[13] = classifier.predict_seven_pitch(X[13,0],X[13,1],X[13,2]);
        y_pred[14] = classifier.predict_seven_pitch(X[14,0],X[14,1],X[14,2]);
        y_pred[15] = classifier.predict_seven_pitch(X[15,0],X[15,1],X[15,2]);
        y_pred[16] = classifier.predict_seven_pitch(X[16,0],X[16,1],X[16,2]);
        y_pred[17] = classifier.predict_seven_pitch(X[17,0],X[17,1],X[17,2]);
        y_pred[18] = classifier.predict_seven_pitch(X[18,0],X[18,1],X[18,2]);
        y_pred[19] = classifier.predict_seven_pitch(X[19,0],X[19,1],X[19,2]);

        y_pred[20] = classifier.predict_seven_pitch(X[20,0],X[20,1],X[20,2]);
        y_pred[21] = classifier.predict_seven_pitch(X[21,0],X[21,1],X[21,2]);
        y_pred[22] = classifier.predict_seven_pitch(X[22,0],X[22,1],X[22,2]);
        y_pred[23] = classifier.predict_seven_pitch(X[23,0],X[23,1],X[23,2]);
        y_pred[24] = classifier.predict_seven_pitch(X[24,0],X[24,1],X[24,2]);
        y_pred[25] = classifier.predict_seven_pitch(X[25,0],X[25,1],X[25,2]);
        y_pred[26] = classifier.predict_seven_pitch(X[26,0],X[26,1],X[26,2]);
        y_pred[27] = classifier.predict_seven_pitch(X[27,0],X[27,1],X[27,2]);
        y_pred[28] = classifier.predict_seven_pitch(X[28,0],X[28,1],X[28,2]);
        y_pred[29] = classifier.predict_seven_pitch(X[29,0],X[29,1],X[29,2]);

        y_pred[30] = classifier.predict_seven_pitch(X[30,0],X[30,1],X[30,2]);
        y_pred[31] = classifier.predict_seven_pitch(X[31,0],X[31,1],X[31,2]);
        y_pred[32] = classifier.predict_seven_pitch(X[32,0],X[32,1],X[32,2]);
        y_pred[33] = classifier.predict_seven_pitch(X[33,0],X[33,1],X[33,2]);
        y_pred[34] = classifier.predict_seven_pitch(X[34,0],X[34,1],X[34,2]);
        y_pred[35] = classifier.predict_seven_pitch(X[35,0],X[35,1],X[35,2]);
        y_pred[36] = classifier.predict_seven_pitch(X[36,0],X[36,1],X[36,2]);
        y_pred[37] = classifier.predict_seven_pitch(X[37,0],X[37,1],X[37,2]);
        y_pred[38] = classifier.predict_seven_pitch(X[38,0],X[38,1],X[38,2]);
        y_pred[39] = classifier.predict_seven_pitch(X[39,0],X[39,1],X[39,2]);

        y_pred[40] = classifier.predict_seven_pitch(X[40,0],X[40,1],X[40,2]);
        y_pred[41] = classifier.predict_seven_pitch(X[41,0],X[41,1],X[41,2]);
        y_pred[42] = classifier.predict_seven_pitch(X[42,0],X[42,1],X[42,2]);
        y_pred[43] = classifier.predict_seven_pitch(X[43,0],X[43,1],X[43,2]);
        y_pred[44] = classifier.predict_seven_pitch(X[44,0],X[44,1],X[44,2]);
        y_pred[45] = classifier.predict_seven_pitch(X[45,0],X[45,1],X[45,2]);
        y_pred[46] = classifier.predict_seven_pitch(X[46,0],X[46,1],X[46,2]);
        y_pred[47] = classifier.predict_seven_pitch(X[47,0],X[47,1],X[47,2]);
        y_pred[48] = classifier.predict_seven_pitch(X[48,0],X[48,1],X[48,2]);
        y_pred[49] = classifier.predict_seven_pitch(X[49,0],X[49,1],X[49,2]);
        classifier.accuracy(y_pred,y_seven_pitch,50);
    }
}


public class Classification {
    public void accuracy(int[] y_pred,int[] y_test,int N) {
        double count = 0;
        for(int i = 0; i < N; i++) {
            if(y_pred[i] == y_test[i]) {
            count += 1.0;
            }
        }
        double accuracy = (count/N)*100;
        Console.Write("Accuracy: ");
        Console.Write(accuracy);
        Console.Write("%");
        Console.WriteLine();
    }
    //1 = right, 0 = left
    //updated with offspeed = 0(Channgeup, Curveball, Slider, Splitter) && Fastball = 1(4-seam Fastball, Cutter, && Sinker)
    public int predict_two_pitch(double throwing_arm, double velocity, double spin_rate) {
        // Console.Write("Velocity:");
        // Console.Write(velocity);
        // delay(1000);
        //W = weight vector from pretrained SVM Model
        double[] w = {-3.77248428, 3.11702946,  0.00617956};
        double b = -286.35451119231914;
        //Feature Vector X = [Velocity, Spin Rate]
        double[] X = {throwing_arm, velocity, spin_rate};  
        //Linear SVM equation to get predicted value
        double y = X[0]*w[0] + X[1]*w[1] + X[2]*w[2] + b;  
        // Console.Write("Y:");
        // Console.Write(y);
        // delay(1000);
        int pred = 0;
        if (y > 1){
            pred = 1;
        } else {
            pred = 0;
        }
        Console.Write("Pred: ");
        Console.Write(pred);
        return pred;
    }
    //ages 10-18, 19 == college, else is MLB
    public int predict_experience_two_pitch(double throwing_arm, double velocity, double spin_rate, int experience_level) {
        double[] w = new double[3];
        double b = 0.0;
        if (experience_level == 10){
            //accuracy = 70%
            w[0] = 0.34136446;
            w[1] = -0.854808;
            w[2] = 0.00666127;
            b = 37.561499850603695;
        } else if(experience_level == 11) {
            //accuracy = 60%
            w[0] = 0.49015269;
            w[1] = 0.34162832;
            w[2] = -0.0088187;
            b = -6.8652997075552;
        } else if(experience_level == 12) {
            //accuracy = 73%
            w[0] = -1.20213472;
            w[1] = 0.97455178;
            w[2] = -0.00164458;
            b = -55.007939723149335;
        } else if(experience_level == 13) {
            //accuracy = 86%
            w[0] = -1.88227197;
            w[1] = -1.32382397;
            w[2] =  0.00413271;
            b = -89.11690499174325;
        } else if(experience_level == 14) {
            //accuracy = 88%
            w[0] = -1.50177066;
            w[1] =  1.19553603;
            w[2] = 0.00380762;
            b = -87.05943299468039;
        } else if(experience_level == 15) {
            //accuracy = 89%
            w[0] = -1.53755173;
            w[1] = 1.08828407;
            w[2] = 0.00543559;
            b = -86.65224626873662;
        } else if(experience_level == 16) {
            //accuracy = 88%
            w[0] = -1.28979595;
            w[1] =  1.09714135;
            w[2] =  0.00251726;
            b = -85.02884363760495;
        } else if(experience_level == 17) {
            //accuracy = 85%
            w[0] = -1.74418036;
            w[1] = 1.27264135;
            w[2] = 0.00460643;
            b = -104.92057142090434;
        } else if(experience_level == 18) {
            //accuracy = 86%
            w[0] = -1.47897291;
            w[1] =  1.24876061;
            w[2] =  0.0037658;
            b = -105.31950113774215;    
        } else if(experience_level == 19) {
            //accuracy = 87%
            w[0] = -1.93802168;
            w[1] = 1.36263619;
            w[2] = 0.00571239;
            b = -118.44628437551006;
        } else {
            //MLB
            //accuracy = 96%
            w[0] = -3.77248428;
            w[1] = 3.11702946;
            w[2] = 0.00617956;
            b = -286.35451119231914;
        }
        //Linear SVM equation to get predicted value
        double y = w[0]*throwing_arm + w[1]*velocity + w[2]*spin_rate + b;  
        Console.Write("y: ");
        Console.WriteLine(y);
        int pred = 0;
        if (y > 1) {
            pred = 1;
        } else {
            pred = 0;
        }
        Console.Write("Pred: ");
        Console.WriteLine(pred);
        return pred;
    }
    public int predict_seven_pitch(double throwing_arm, double velocity, double spin_rate) {
        int[] votes = {0,0,0,0,0,0,0};
        double[,] w = {{-5.53687822e-01,  6.07595178e-01, -7.08212091e-03},
        { 2.42403226e+00, -7.94967065e-01, -1.13656390e-02},
        { 1.33509133e+00, -9.84782409e-01, -8.02153088e-03},
        {-8.65496000e-01, -2.10310170e-01,  5.96280231e-03},
        { 1.33287822e+00, -9.48333970e-01, -5.35347263e-03},
        { 4.97903002e-01,  1.84521701e-01, -1.49712591e-02},
        { 2.49433471e+00, -1.06920800e+00,  2.97406047e-03},
        { 4.27132600e-01, -7.08176986e-01,  5.27634307e-03},
        {-4.44089210e-16, -2.22248945e-01,  4.40724944e-03},
        { 4.44089210e-15, -9.28050819e-01,  9.67616322e-03},
        { 2.16320081e+00, -2.03894284e+00,  7.16791168e-04},
        { 1.16119181e+00, -1.44816637e+00,  1.73191049e-02},
        {-5.93341211e-04,  1.42401891e-03,  3.44137902e-02},
        { 1.06255320e+00, -1.37779046e+00,  1.93009688e-02},
        {-1.98014179e+00,  1.86624103e+00, -3.77155171e-03},
        {-2.07952565e-01,  8.55437708e-01,  3.24837696e-01},
        { 5.26366139e-01, -3.12180856e-01,  3.88841103e-02},
        {-1.24045808e+00,  1.60826307e+00, -1.19519517e-02},
        { 6.85321906e-01, -1.17403656e-01, -1.39033387e-02},
        { 3.64232382e-01,  5.83512361e-0,1 -7.88401053e-03},
        {-9.47652855e-01,  1.40350125e+00, -1.15943129e-02}};
        double[] b = {-34.67567594,   91.67355429,  103.27184256,   11.56615811,   94.43161805,
        14.04751384,   81.83168503,   48.72559804,   10.72821916,   58.92118838,
        162.22771893,   89.47132755,  -66.47297999,   80.58588467, -154.48706709,
        -690.81156033,  -53.77953048, -115.71840327,   34.44554411,  -36.67600083,
        -99.30674084}; 
        double[] pred = new double[21];
        for(int j = 0; j < 21; j++) { 
            pred[j] = w[j,0]*throwing_arm + w[j,1]*velocity + w[j,2]*spin_rate + b[j];   
            if(pred[j] > 0 && j < 6){
                votes[0] += 1;
            } else if(pred[j] < 0 && j == 0) {
                votes[1] += 1;
            } else if(pred[j] < 0 && j == 1) {
                votes[2] += 1;
            } else if(pred[j] < 0 && j == 2) {
                votes[3] += 1;
            } else if(pred[j] < 0 && j == 3) {
                votes[4] += 1;
            } else if(pred[j] < 0 && j == 4) {
                votes[5] += 1;
            } else if(pred[j] < 0 && j == 5) {
                votes[6] += 1;
            } else if(pred[j] > 0 && j >= 6 && j < 11) {
                votes[1] += 1;
            } else if(pred[j] < 0 && j == 6) {
                votes[2] += 1;
            } else if(pred[j] < 0 && j == 7) {
                votes[3] += 1;
            } else if(pred[j] < 0 && j == 8) {
                votes[4] += 1;
            } else if(pred[j] < 0 && j == 9) {
                votes[5] += 1;
            } else if(pred[j] < 0 && j == 10) {
                votes[6] += 1;
            } else if(pred[j] > 0 && j >= 11 && j < 15) {
                votes[2] += 1;
            } else if(pred[j] < 0 && j == 11) {
                votes[3] += 1;
            } else if(pred[j] < 0 && j == 12) {
                votes[4] += 1;
            } else if(pred[j] < 0 && j == 13) {
                votes[5] += 1;
            } else if(pred[j] < 0 && j == 14) {
                votes[6] += 1;
            } else if(pred[j] > 0 && j >= 15 && j < 18) {
                votes[3] += 1;
            } else if(pred[j] < 0 && j == 15) {
                votes[4] += 1;
            } else if(pred[j] < 0 && j == 16) {
                votes[5] += 1;
            } else if(pred[j] < 0 && j == 17) {
                votes[6] += 1;
            } else if(pred[j] > 0 && j >= 18 && j < 20) {
                votes[4] += 1;
            } else if(pred[j] < 0 && j == 18) {
                votes[5] += 1;
            } else if(pred[j] < 0 && j == 19) {
                votes[6] += 1;
            } else if(pred[j] > 0 && j == 20) {
                votes[5] += 1;
            } else {
                votes[6] += 1;
            }
        }
        int max_votes = 0;
        int class_label = 0;
        for(int i = 0; i < 7; i++) {
            if(votes[i] > max_votes) {
            max_votes = votes[i];
            class_label = i;
            }
        }
        Console.Write("Class Label: ");
        Console.WriteLine(class_label);
        return class_label;
    }
    public int predict_experience_seven_pitch(double throwing_arm, double velocity, double spin_rate, int experience_level) {
        int[] votes = new int[21];
        float[,] weights = new float[21,3];
        float[] bias = new float[21];
        if (experience_level == 10){
            //accuracy = 56%
            double[,] w = {{ 2.82074672e-01, -9.76093831e-01, -1.60063457e-02},
            {-2.88258573e-01,  2.90506647e-01, -9.89315679e-03},
            { 8.57154801e-02 ,-1.32295736e-01, -1.17246905e-02},
            {-1.28964875e-01  ,2.03939975e-02 , 9.30638707e-04},
            { 4.87525804e-02  ,7.86171784e-02 ,-1.00698487e-02},
            { 2.54012333e-01 ,-4.74858650e-01 ,-6.21642426e-03},
            {-6.30476276e-01 , 7.25251232e-01 , 8.53752223e-03},
            {-1.17908115e+00 , 1.00511337e+00 , 1.38736367e-02},
            {-2.97045573e-01  ,7.91740263e-01 , 2.57314548e-02},
            {-5.45329398e-01  ,8.39254549e-01 , 1.23272073e-02},
            {-1.12101822e+00  ,6.45657313e-01 , 1.48536176e-02},
            { 6.58700799e-01 ,-1.01332980e+00  ,6.70155890e-03},
            {-6.67419816e-01 ,-4.25923225e-01  ,1.24480256e-02},
            { 1.21419899e-01 ,-6.43505887e-01  ,1.11994491e-02},
            { 4.75707658e-01 ,-6.92408639e-01  ,1.06891206e-02},
            {-9.26667208e-01 ,-1.55391680e-01  ,1.47240611e-02},
            {-3.67813949e-01 , 5.47490158e-01  ,6.81186881e-03},
            {-2.55077355e-01 ,-5.05725229e-01  ,1.52155303e-02},
            { 9.24652180e-01 , 4.83210569e-01 ,-1.73818504e-02},
            { 8.29569930e-01 ,-1.03342647e-01 ,-6.72267511e-03},
            {-5.87060744e-02 ,-7.33566640e-01 , 7.53485490e-03}};
            double[] b = { 76.9623354,   -2.14259411 , 21.24875092,  -0.71511984 ,  7.83678861,
            32.3528126 , -52.06697813 -76.50364946 -78.41732197, -64.3677697,
            -57.48121487 , 42.83345852 ,  8.39082235,  17.85323673,  21.58373433,
            -7.29554116 ,-37.52461676 ,  7.95849288 , -7.35327197,  10.99857252,29.57009024};
            Array.Copy(w,weights,w.Length);
            Array.Copy(b,bias,b.Length);
        } else if(experience_level == 11) {
            //accuracy = 64%
            double[,] w = {{ 0.4602429,  -0.3967152,  -0.00905977},
            { 0.75040226, -0.61768737 ,-0.00859696},
            { 0.85941855, -1.12823776 ,-0.00701815},
            {-0.18933863, -0.42378339,  0.00133944},
            { 0.29536139, -0.46449438, -0.00864034},
            { 0.98600383 ,-0.79344223, -0.00914579},
            {-0.66644436, -0.07773337,  0.0109743 },
            {-0.32393637, -0.72609837,  0.01567052},
            {-1.0      ,   -0.21715375 , 0.00758152},
            {-0.56726121 ,-0.16019591,  0.01358866},
            { 0.68202347, -0.71340229, -0.00539496},
            { 0.88478915 ,-0.91787175,  0.00761038},
            {-0.90940737, -0.36510278 , 0.00802194},
            {-0.52211135 ,-0.07165192 , 0.00500111},
            { 1.29875322 ,-0.63191609 ,-0.01087716},
            {-0.73198271 ,-0.0940877 ,  0.00718297},
            {-0.84747069 , 1.19696179, -0.00339659},
            { 0.66717565, -0.2077229 , -0.01717013},
            { 0.67559979 , 0.22764529 ,-0.00739948},
            { 1.26358098, -0.10370634, -0.00882857},
            { 0.86875132, -0.70158697, -0.01554777}};
            double[] b = {36.36204268 , 47.91884196  ,75.63816636 , 24.72175878 , 38.60021937,
            60.61094879 ,-12.16632386 , 18.2085883  ,  3.95988837 ,-12.20017439,
            51.54004352 , 41.34660016 , 12.22566891 , -4.25328945 , 54.48554082,
            -2.40255532, -65.57404493 , 40.72239196 , -5.03599669 , 17.56425421,67.22957556};
            Array.Copy(w,weights,w.Length);
            Array.Copy(b,bias,b.Length);
        } else if(experience_level == 12) {
            //accuracy = 53%
            double[,] w = {{-1.79334872e-01 , 2.75866281e-01, -7.80712938e-03},
            { 1.46222922e+00 ,-1.19421553e+00 ,-9.08332055e-03},
            { 9.54549136e-01 ,-1.04918875e+00 ,-6.75229773e-03},
            { 2.29837495e-01 ,-8.68803602e-01 , 1.54855783e-03},
            { 7.33274231e-01 ,-9.08709838e-01 ,-1.00587328e-02},
            { 6.88716707e-02 ,-5.47045103e-01 ,-9.57332207e-03},
            { 1.14015420e+00 ,-1.18843573e+00 ,-2.77818515e-03},
            { 1.00000000e+00 ,-9.86799689e-01 , 6.45393055e-04},
            { 1.77635684e-15 ,-8.10534026e-01 , 6.75802868e-03},
            { 6.38729359e-01 ,-1.01474912e+00  ,3.84087733e-04},
            { 6.47872093e-01 ,-8.46676200e-01 ,-7.30497667e-03},
            { 9.39227012e-01 ,-1.05359734e+00 , 4.55334803e-03},
            {-1.23143961e+00 ,-4.71662540e-01  ,1.44382976e-02},
            {-2.01888240e-01 , 2.73873423e-01  ,1.05565882e-03},
            {-1.90421807e-02  ,2.53286919e-01 ,-4.47757044e-03},
            {-6.50676873e-01  ,4.98693896e-02 , 8.77705646e-03},
            {-8.18486236e-01  ,1.44577744e+00 ,-4.14542606e-03},
            {-5.04426924e-01  ,1.20322912e+00 ,-8.31415612e-03},
            { 9.30305305e-01  ,5.45014988e-01 ,-1.53253276e-02},
            { 1.00000000e+00  ,5.64188849e-01 ,-1.11230764e-02},
            { 1.82630231e-01 ,-3.49776106e-02 ,-1.10291963e-02}};
            double[] b = { -4.615321 ,   82.99042044  ,71.81549851  ,50.99439209 , 66.97270487,
            45.87165932,  73.64884963 , 57.06636043 , 40.11207348  ,57.67390007,
            60.00954833 , 55.90100675 , 10.39118408 ,-19.26634635 , -9.31477634,
            -13.68289557, -81.29813228 ,-60.15867635, -13.45487966 ,-20.74598186,19.53515922};
            Array.Copy(w,weights,w.Length);
            Array.Copy(b,bias,b.Length);
        } else if(experience_level == 13) {
            //accuracy = 63%
            double[,] w = {{-4.52934478e-01,  5.24330919e-01, -7.74708786e-03},
            { 1.32575217e+00, -7.95095570e-01 ,-9.51172646e-03},
            { 6.11229029e-01 ,-8.98028340e-01 ,-5.53241806e-03},
            { 2.48689958e-14 ,-7.92663227e-01 , 3.35343482e-03},
            { 8.56360589e-01 ,-9.95177520e-01 ,-4.85504756e-03},
            {-2.49553683e-01 ,-3.18611513e-02 ,-9.82965401e-03},
            { 1.65793203e+00 ,-1.39741458e+00 ,-2.07710281e-03},
            { 7.03565898e-01 ,-8.67431566e-01 , 1.40194325e-03},
            {-3.24185123e-14 ,-1.13816842e+00  ,6.91490894e-03},
            { 9.14450694e-01 ,-1.00278086e+00  ,3.04366662e-03},
            { 8.23712464e-02 ,-7.25080771e-01 ,-2.13778028e-03},
            { 1.00000000e+00 ,-1.06119190e+00 , 4.82563778e-03},
            {-6.72163799e-01 ,-3.10590999e-01  ,9.56392573e-03},
            { 3.94910273e-01 ,-4.72998969e-01  ,5.13570663e-03},
            {-8.18365186e-01 , 1.03545419e+00  ,9.74271039e-04},
            {-1.00027634e+00 ,-1.49248341e-01  ,1.70712932e-02},
            {-7.53095800e-01 , 9.44494044e-01 ,-2.32310849e-05},
            {-6.86966893e-01 , 1.30354743e+00 ,-3.57682242e-03},
            { 6.66822688e-01  ,4.33235425e-01 ,-1.50264932e-02},
            { 3.38925533e-01  ,9.36981626e-01 ,-1.28439996e-02},
            {-5.07494822e-01  ,1.32531958e+00 ,-4.38760276e-03}};
            double[] b = {-19.09201181 , 64.04036606,  65.35628416 , 47.43474265 , 69.54255826,
            16.54854224 , 88.60395999 , 51.5568386  , 61.92626458 , 56.29326164,
            45.86919881 , 59.43505591 ,  7.3003734  , 20.71029933, -67.20051085,
            -12.88459913, -61.0934795  ,-77.40685871 , -8.29128011, -42.38721378,-76.70120659};
            Array.Copy(w,weights,w.Length);
            Array.Copy(b,bias,b.Length);
        } else if(experience_level == 14) {
            //accuracy = 62%
            double[,] w = {{-8.39208702e-01  ,7.00453404e-01 ,-5.85956727e-03},
            { 8.41111672e-01 ,-4.44210269e-01, -9.49911244e-03},
            { 1.10269317e+00 ,-1.11512083e+00 ,-5.45236810e-03},
            {-7.81224324e-01 ,-9.69593504e-02  ,4.65211452e-03},
            { 3.71776456e-01 ,-8.23790402e-01 ,-7.36178969e-03},
            {-9.47232908e-02 ,-1.15089753e-03 ,-9.49865405e-03},
            { 2.16709945e+00 ,-1.20742363e+00 ,-3.84589609e-03},
            { 8.08780865e-01 ,-7.31337623e-01 , 1.23427969e-03},
            { 2.39808173e-14 ,-4.72603439e-01  ,8.67948363e-03},
            { 1.00000000e+00 ,-1.06532923e+00  ,2.92645773e-03},
            { 1.77205663e-01 ,-6.75226081e-01 ,-2.28881862e-03},
            { 1.04791951e+00 ,-1.11342940e+00 , 7.19334779e-03},
            {-9.71757913e-01 ,-7.31483365e-02 , 2.74915388e-02},
            { 3.71146024e-01 ,-7.87223079e-01 , 1.10171342e-02},
            {-7.11083561e-01 , 4.76623917e-01 , 2.61051441e-03},
            {-6.83005285e-01 , 8.67493517e-02 , 1.77863425e-02},
            {-1.42777448e+00 , 1.06516402e+00 ,-9.84971412e-05},
            {-1.00000000e+00 , 1.36905067e+00 ,-2.51466339e-03},
            { 9.79821772e-01 , 9.35784775e-02 ,-1.34255323e-02},
            { 9.70073684e-01 , 2.58887800e-01 ,-9.63239326e-03},
            {-7.84224879e-01 , 1.23456990e+00 ,-4.42977843e-03}};
            double[] b = {-34.67546083 , 45.8170341  , 85.1383838  ,  2.47339607 , 67.72705848,
            15.04285082  ,84.53335238 , 46.15103534  ,18.9683125 ,  64.48144581,
            46.51585084 , 63.07401951 ,-36.46224493  ,33.32053439 ,-37.68341299,
            -31.52218906, -73.88875946, -89.68388424  ,11.7724635  , -5.06931584,-76.03998734};
            Array.Copy(w,weights,w.Length);
            Array.Copy(b,bias,b.Length);
        } else if(experience_level == 15) {
            //accuracy = 65%
            double[,] w = {{-1.07063754e+00,  7.37124146e-01, -5.48756303e-03},
            { 2.54487976e-01, -2.60785203e-01 ,-9.50367389e-03},
            { 9.52864440e-01, -1.01016929e+00 ,-6.03880122e-03},
            {-8.14217395e-01 , 8.03542447e-02 , 4.11084455e-03},
            { 7.13369014e-01 ,-7.76554280e-01 ,-6.10310535e-03},
            {-4.70620500e-01 , 3.31962799e-01 ,-9.38586693e-03},
            { 1.42687521e+00 ,-1.03035848e+00 , 8.03547882e-04},
            { 1.34642686e+00 ,-9.65530183e-01 ,-6.98661584e-04},
            {-4.70576440e-01 ,-2.73791523e-01 , 8.34637538e-03},
            { 1.25687325e+00 ,-9.78922579e-01 , 9.11816693e-04},
            { 3.41265617e-01 ,-6.38402871e-01 ,-2.98848975e-03},
            { 1.31321458e+00 ,-1.08961539e+00  ,3.42242839e-03},
            {-6.77268128e-01 ,-6.08862939e-02  ,1.42036264e-02},
            { 1.05944887e+00 ,-1.02930256e+00  ,3.97803342e-03},
            {-1.21860752e+00 , 9.06167936e-01 ,-1.65238354e-03},
            {-5.00565176e-01 , 3.77314125e-01  ,1.87323665e-02},
            {-4.67848466e-01 , 4.22244470e-01  ,3.29811411e-03},
            {-7.80680045e-01 , 9.91331908e-01 ,-1.90382957e-03},
            { 7.24264020e-01 ,-2.04052498e-01 ,-1.60049963e-02},
            { 1.00000000e+00 , 3.50299081e-01 ,-1.03366982e-02},
            {-4.72237056e-01 , 1.11982303e+00 ,-2.05066813e-03}};
            double[] b = {-39.59321034 , 35.32230013 , 83.24328651 , -9.2467947  , 66.14877578,
            -7.1466643 ,  68.19694637 , 68.26947599 ,  7.28134606 , 66.22213586,
            46.88144036,  71.93713228 ,-17.23627841 , 66.18136176 ,-60.62858175,
            -56.48764088 ,-36.81134079, -67.42813907 , 38.33517869, -10.31401563, -76.46914341};
            Array.Copy(w,weights,w.Length);
            Array.Copy(b,bias,b.Length);
        } else if(experience_level == 16) {
            //accuracy = 60%
            double[,] w = {{-7.27777274e-01 , 5.41369657e-01, -6.71031621e-03},
            { 4.52160677e-01 ,-1.44497941e-01 ,-7.97008880e-03},
            { 1.29131066e+00 ,-9.90123761e-01 ,-5.78464467e-03},
            {-5.81020264e-01 ,-4.80063300e-02 , 5.91780018e-03},
            { 1.09681689e+00 ,-8.98073693e-01 ,-6.42870553e-03},
            {-4.32020445e-01 , 1.60573163e-01 ,-9.89077589e-03},
            { 1.25584454e+00 ,-9.14361574e-01 ,-3.52590403e-04},
            { 6.73816971e-01 ,-7.87622916e-01 , 1.74892928e-03},
            {-1.11283423e-01 ,-3.00237758e-01 , 6.48900018e-03},
            { 8.95984416e-01 ,-8.89411977e-01 , 2.97472870e-03},
            {-5.05229446e-02 ,-6.36092347e-01 ,-3.05227155e-03},
            { 5.98814932e-01 ,-8.94380787e-01 , 1.95877794e-03},
            {-2.49529937e-03 , 7.65177384e-03  ,7.01814613e-02},
            { 9.69782298e-01 ,-8.50715689e-01  ,4.00852808e-03},
            {-4.22199643e-01 , 4.01328215e-01 ,-2.15990082e-03},
            {-7.45083204e-04 , 6.19178072e-03 , 3.80954774e-02},
            {-9.08508706e-01 , 8.11646276e-01 , 1.87194487e-03},
            {-5.91592884e-01 , 1.13583241e+00 ,-3.97467387e-03},
            { 5.87205504e-02 ,-3.36692298e-01 ,-2.89879539e-02},
            { 1.36325539e+00 , 2.46261457e-01 ,-1.28875392e-02},
            {-9.93854633e-01 , 1.20840297e+00 ,-2.97399405e-03}};
            double[] b = { -25.34171068 ,  24.96140855 ,  84.07482928 ,  -2.91545719 ,  77.4655179,
            5.67893521 ,  64.89848795 ,  54.22385051  , 12.05856105  , 58.25974328,
            49.14599864,   62.97978017 ,-111.97531154  , 54.43956524 , -26.25222461,
            -61.3806063 ,  -65.42132836,  -77.45781036  , 69.8506573  ,   0.4926127, -83.60623567};
            Array.Copy(w,weights,w.Length);
            Array.Copy(b,bias,b.Length);
        } else if(experience_level == 17) {
            //accuracy = 62%
            double[,] w = {{-8.51870621e-01,  5.73474785e-01, -5.90838460e-03},
            { 3.52680883e-01 ,-1.49621707e-01 ,-8.67982215e-03},
            { 1.05406971e+00 ,-8.94117992e-01 ,-6.32287316e-03},
            {-1.11018880e+00 , 8.89610530e-02 , 5.17247775e-03},
            { 8.55935877e-01 ,-6.61717178e-01 ,-7.42329346e-03},
            {-3.40154264e-01 , 3.08050662e-01 ,-8.37692083e-03},
            { 1.89226329e+00 ,-1.06865496e+00 ,-2.19623212e-03},
            { 1.36018813e+00 ,-8.43227436e-01 , 1.03597706e-03},
            {-6.86926503e-01 ,-1.81286900e-01  ,1.01924444e-02},
            { 8.72844098e-01 ,-8.82151821e-01  ,3.24230848e-03},
            { 4.25941918e-01 ,-5.98034399e-01 ,-3.77547240e-03},
            { 1.36026810e+00 ,-9.76020170e-01  ,4.30190978e-03},
            {-1.12834866e-03 , 4.61112401e-03  ,4.72665789e-02},
            { 1.12169756e+00 ,-8.55960905e-01  ,5.50689280e-03},
            {-1.14829403e+00 , 6.59318302e-01 ,-1.21706663e-03},
            {-1.35638205e-03 , 1.12895306e-02  ,5.08340203e-02},
            {-9.75822053e-01 , 1.06148920e+00  ,8.67497874e-04},
            {-1.00000000e+00 , 1.23849459e+00 ,-3.06312201e-03},
            { 2.49990064e-02 ,-1.45660078e-01 ,-1.67915229e-01},
            { 1.02240557e+00 , 3.28800979e-01 ,-1.08604348e-02},
            {-7.92277409e-01  ,1.22359134e+00 ,-3.95626627e-03}};
            double[] b = {-30.11377407,  27.6060922,   80.36645945 ,-11.83353195,  63.73817803,
            -7.73389588 , 82.02451894,  60.8194919,   -1.37918897 , 58.84587916,
            48.97675506 , 65.82446841 ,-78.59879322 , 53.24205591, -47.53313119,
            -84.90578599, -85.05423277, -88.96787851 ,285.84488913,  -8.6484067, -85.26245815};
            Array.Copy(w,weights,w.Length);
            Array.Copy(b,bias,b.Length);
        } else if(experience_level == 18) {
            //accuracy = 57%
            double[,] w = {{-7.51992021e-01 , 5.07721105e-01, -5.50744706e-03},
            { 3.66769776e-01 ,-4.41989883e-01, -9.83563330e-03},
            { 1.00000000e+00 ,-8.49173137e-01 ,-6.80651680e-03},
            {-1.00000000e+00 , 5.47786377e-02  ,4.26535200e-03},
            { 7.15161767e-01 ,-7.88545215e-01 ,-6.03909710e-03},
            {-3.23477644e-01  ,1.61049344e-01 ,-8.35321264e-03},
            { 1.70303240e+00 ,-1.13142183e+00 ,-8.78629799e-05},
            { 1.00000000e+00 ,-7.71022734e-01 , 2.32578914e-04},
            {-5.88719679e-02 ,-3.09350145e-01 , 8.05414058e-03},
            { 8.17436893e-01 ,-8.85182487e-01  ,2.72730609e-03},
            { 7.17471672e-01 ,-7.94828558e-01 ,-3.06470157e-03},
            { 1.24206984e+00 ,-1.07397265e+00  ,5.13766524e-03},
            {-6.41407031e-01 , 9.39413015e-01  ,7.70791036e-02},
            { 9.67259612e-01 ,-9.82128839e-01  ,8.86463796e-03},
            {-1.00424105e+00 , 7.61851639e-01 ,-1.34196357e-03},
            {-6.31198176e-01 , 3.50362866e-01 , 2.96830371e-02},
            {-1.17785026e+00 , 9.88698336e-01 , 2.72589986e-03},
            {-1.09141745e+00 , 1.24726768e+00 ,-2.06771237e-03},
            { 1.00000000e+00 ,-8.13432433e-02 ,-1.26210807e-02},
            { 1.00000000e+00 , 2.21126121e-01 ,-9.77797594e-03},
            {-1.18038762e+00  ,1.33495491e+00 ,-4.27819398e-03}};
            double[] b = { -27.23712899 ,  53.53110958 ,  80.31125362  , -8.31281641  , 73.14361444,
            2.84598446  , 85.22880517 ,  59.14416729  , 10.94039794 ,  62.22920592,
            63.39642484 ,  74.96386147 ,-205.37158385 , 59.32217402,  -57.50420214,
            -78.38846878 , -85.962622  , -95.2632287  ,  26.16557585 ,  -2.51657325, -96.871456};
            Array.Copy(w,weights,w.Length);
            Array.Copy(b,bias,b.Length);
        } else if(experience_level == 19) {
            double[,] w = {{-7.02909980e-01,  6.21498818e-01, -7.18733987e-03},
            { 6.50032302e-01, -2.01236289e-01 ,-9.74468869e-03},
            { 1.27999893e+00, -8.40519800e-01 ,-5.70782791e-03},
            {-1.00000000e+00, -5.90136313e-02 , 6.74313902e-03},
            { 1.29928893e+00, -7.46538064e-01 ,-7.04536856e-03},
            { 3.75592222e-02,  3.20425338e-01 ,-1.05201911e-02},
            { 1.02713173e+00, -9.48202025e-01 , 1.96975969e-03},
            { 3.67451675e-01, -8.53268171e-01 , 2.34598657e-03},
            {-8.32667268e-17, -6.01472762e-01 , 3.20439965e-02},
            { 5.71806713e-01, -9.46162363e-01 , 5.39289230e-03},
            { 1.52719036e-01, -6.88424127e-01 ,-2.40865239e-03},
            { 1.68461847e+00, -1.06047469e+00 , 4.22007882e-03},
            {-1.07248769e-04, -3.29332388e-04 , 1.46415802e-02},
            { 1.08497313e+00 ,-9.10430546e-01 , 6.19398728e-03},
            {-3.18556458e-01,  6.48873500e-01 ,-1.53075051e-03},
            {-1.34007677e-04,  2.84139327e-04 , 1.63683114e-02},
            {-9.98701557e-01,  9.30059681e-01 , 2.10744911e-03},
            {-1.14307874e+00,  1.03093937e+00, -2.96292809e-03},
            { 4.53821377e-04,  1.02446867e-04 ,-3.01238606e-02},
            {-6.66133815e-16 , 9.31595423e-01, -4.95315436e-02},
            {-1.00000000e+00 , 1.29002791e+00, -5.01488619e-03}};
            double[] b = {-33.17508298  ,33.99764207 , 78.17128839,  -2.66759868  ,72.29625086,
            -5.64416834,  67.8145618,   62.3357068,   -2.9789272  , 62.79559331,
            54.7970906,   76.18144237, -24.20541713 , 59.7594502 , -48.82628939,
            -26.99510945, -80.76801337 ,-76.3684288 ,  48.78976891 ,  3.89808981,
            -92.33870336};
            Array.Copy(w,weights,w.Length);
            Array.Copy(b,bias,b.Length);
        } else {
            double[,] w = {{-5.53687822e-01,  6.07595178e-01, -7.08212091e-03},
            { 2.42403226e+00, -7.94967065e-01, -1.13656390e-02},
            { 1.33509133e+00, -9.84782409e-01, -8.02153088e-03},
            {-8.65496000e-01, -2.10310170e-01,  5.96280231e-03},
            { 1.33287822e+00, -9.48333970e-01, -5.35347263e-03},
            { 4.97903002e-01,  1.84521701e-01, -1.49712591e-02},
            { 2.49433471e+00, -1.06920800e+00,  2.97406047e-03},
            { 4.27132600e-01, -7.08176986e-01,  5.27634307e-03},
            {-4.44089210e-16, -2.22248945e-01,  4.40724944e-03},
            { 4.44089210e-15, -9.28050819e-01,  9.67616322e-03},
            { 2.16320081e+00, -2.03894284e+00,  7.16791168e-04},
            { 1.16119181e+00, -1.44816637e+00,  1.73191049e-02},
            {-5.93341211e-04,  1.42401891e-03,  3.44137902e-02},
            { 1.06255320e+00, -1.37779046e+00,  1.93009688e-02},
            {-1.98014179e+00,  1.86624103e+00, -3.77155171e-03},
            {-2.07952565e-01,  8.55437708e-01,  3.24837696e-01},
            { 5.26366139e-01, -3.12180856e-01,  3.88841103e-02},
            {-1.24045808e+00,  1.60826307e+00, -1.19519517e-02},
            { 6.85321906e-01, -1.17403656e-01, -1.39033387e-02},
            { 3.64232382e-01,  5.83512361e-0,1 -7.88401053e-03},
            {-9.47652855e-01,  1.40350125e+00, -1.15943129e-02}};
            double[] b = {-34.67567594,   91.67355429,  103.27184256,   11.56615811,   94.43161805,
            14.04751384,   81.83168503,   48.72559804,   10.72821916,   58.92118838,
            162.22771893,   89.47132755,  -66.47297999,   80.58588467, -154.48706709,
            -690.81156033,  -53.77953048, -115.71840327,   34.44554411,  -36.67600083,-99.30674084};
            Array.Copy(w,weights,w.Length);
            Array.Copy(b,bias,b.Length);
        } 
        double[] pred = new double[21];
        for(int i = 0; i < 21; i++) {
            pred[i] = weights[i,0]*throwing_arm + weights[i,1]*velocity + weights[i,2]*spin_rate + bias[i];
        }
        for(int j = 0; j < 21; j++) {    
            if(pred[j] > 0 && j < 6){
            votes[0] += 1;
            } else if(pred[j] < 0 && j == 0) {
                votes[1] += 1;
            } else if(pred[j] < 0 && j == 1) {
                votes[2] += 1;
            } else if(pred[j] < 0 && j == 2) {
                votes[3] += 1;
            } else if(pred[j] < 0 && j == 3) {
                votes[4] += 1;
            } else if(pred[j] < 0 && j == 4) {
                votes[5] += 1;
            } else if(pred[j] < 0 && j == 5) {
                votes[6] += 1;
            } else if(pred[j] > 0 && j >= 6 && j < 11) {
                votes[1] += 1;
            } else if(pred[j] < 0 && j == 6) {
                votes[2] += 1;
            } else if(pred[j] < 0 && j == 7) {
                votes[3] += 1;
            } else if(pred[j] < 0 && j == 8) {
                votes[4] += 1;
            } else if(pred[j] < 0 && j == 9) {
                votes[5] += 1;
            } else if(pred[j] < 0 && j == 10) {
                votes[6] += 1;
            } else if(pred[j] > 0 && j >= 11 && j < 15) {
                votes[2] += 1;
            } else if(pred[j] < 0 && j == 11) {
                votes[3] += 1;
            } else if(pred[j] < 0 && j == 12) {
                votes[4] += 1;
            } else if(pred[j] < 0 && j == 13) {
                votes[5] += 1;
            } else if(pred[j] < 0 && j == 14) {
                votes[6] += 1;
            } else if(pred[j] > 0 && j >= 15 && j < 18) {
                votes[3] += 1;
            } else if(pred[j] < 0 && j == 15) {
                votes[4] += 1;
            } else if(pred[j] < 0 && j == 16) {
                votes[5] += 1;
            } else if(pred[j] < 0 && j == 17) {
                votes[6] += 1;
            } else if(pred[j] > 0 && j >= 18 && j < 20) {
                votes[4] += 1;
            } else if(pred[j] < 0 && j == 18) {
                votes[5] += 1;
            } else if(pred[j] < 0 && j == 19) {
                votes[6] += 1;
            } else if(pred[j] > 0 && j == 20) {
                votes[5] += 1;
            } else {
                votes[6] += 1;
            }
        }
        int max_votes = 0;
        int class_label = 0;
        for(int i = 0; i < 21; i++) {
            // Console.Write("Votes: ");
            // Console.WriteLine(votes[i]);
            // delay(1000);
            if(votes[i] > max_votes) {
            max_votes = votes[i];
            class_label = i;
            }
        }
        Console.Write("Pred: ");
        Console.WriteLine(class_label);
        return class_label;
    }
}


